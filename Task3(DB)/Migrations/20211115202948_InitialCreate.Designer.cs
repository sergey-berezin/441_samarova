// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task3_DB_;

namespace Task3_DB_.Migrations
{
    [DbContext(typeof(PictureLibraryContext))]
    [Migration("20211115202948_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Task3_DB_.PictureInfoDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TypeId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("image")
                        .HasColumnType("BLOB");

                    b.Property<int?>("rectangleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("rectangleId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("Task3_DB_.PictureTypeDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("Task3_DB_.RectangleDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("coordinate")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("RectangleDB");
                });

            modelBuilder.Entity("Task3_DB_.PictureInfoDB", b =>
                {
                    b.HasOne("Task3_DB_.PictureTypeDB", "Type")
                        .WithMany("Pictures")
                        .HasForeignKey("TypeId");

                    b.HasOne("Task3_DB_.RectangleDB", "rectangle")
                        .WithMany()
                        .HasForeignKey("rectangleId");

                    b.Navigation("rectangle");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Task3_DB_.PictureTypeDB", b =>
                {
                    b.Navigation("Pictures");
                });
#pragma warning restore 612, 618
        }
    }
}
